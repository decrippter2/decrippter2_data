[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "decrippter2_data"
version = "0.1.0"
description = "Containing the decRiPPter data, data schema, and validation methods"
readme = "README.md"
requires-python = ">=3.11"
license-files = { paths = ["LICENSE"] }
authors = [
    { name = "Mitja M. Zdouc", email = "zdoucmm@gmail.com" }
]
keywords = [
    "cheminformatics",
    "genomics"
]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry"
]
dependencies = [
    "argparse~=1.4",
    "coloredlogs~=15.0",
    "jsonschema~=4.23",
    "pydantic~=2.8",
    "pre-commit~=3.4",
    "pytest~=7.4",
    "ruff~=0.5",
]

[project.urls]
Organization = "https://github.com/decrippter2/"
Homepage = "https://github.com/decrippter2/mite_schema"
Issues = "https://github.com/decrippter2/mite_schema/issues"

[project.scripts]
d2_validate = "decrippter2_data.main:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
pythonpath = [
  "mite_schema"
]

[tool.ruff.lint]
select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-eradicate/eradicate
    "ERA",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8-pie
    "PIE",
    # pygrep
    "PGH",
    # ruff checks
    "RUF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
]
ignore = [
    # whitespace-before-punctuation
    "E203",
    # percent-format-invalid-format
    "E501",
    # mixed-case-variable-in-class-scope
    "N815"
]